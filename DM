<php
contact-book;
├── public;
│   ├── index.php
│   ├── create.php
│   ├── edit.php
│   ├── delete.php
├── src;
│   ├── ContactManager.php
│   ├── SessionContactManager.php
│   ├── JsonContactManager.php
├── includes;
│   ├── header.php
│   ├── footer.php
│   ├── functions.php
├── data;
│   └── contacts.json

php>

<php
require_once __DIR__.../includes/header.php ;
require_once __DIR__.../src/SessionContactManager.php ;

$contactManager = new SessionContactManager();
$contacts = $contactManager = getAllContacts();
>

<h1>Carnet de Contacts</h1>

<a href="create.php" class="btn btn-primary mb-3">Ajouter un contact</a>

<table class="table">
    <thead>
        <tr>
            <th>Nom</th>
            <th>Email</th>
            <th>Favori</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        <php foreach ($contacts as $id = $contact);>
        <tr>
            <td>< = htmlspecialchars($contact['name'])></td>
            <td>< = htmlspecialchars($contact['email'])></td>
            <td> = <$contact['favorite']></td>
            <td>
                <a href="edit.php?id=<?= $id ?>" class="btn btn-sm btn-warning">Modifier</a>
                <a href="delete.php?id=<?= $id ?>" class="btn btn-sm btn-danger" onclick="return confirm('Êtes-vous sûr ?')">Supprimer</a>
            </td>
        </tr>
        <php endforeach;>
    </tbody>
</table>

<php require_once __DIR__.../includes/footer.php>


<php
require_once __DIR__.../includes/header.php;
require_once __DIR__.../src/SessionContactManager.php;

$contactManager = new SessionContactManager();

if ($_SERVER[REQUEST_METHOD] = 'POST') {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $favorite = isset($_POST['favorite']);
    
    $contactManager = addContact($name, $email, $favorite);
    header(Location: index.php);
    exit;
}
>

<h1>Ajouter un contact</h1>

<form method="post">
    <div class="form-group">
        <label for="name">Nom</label>
        <input type="text" class="form-control" id="name" name="name" required>
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <input type="email" class="form-control" id="email" name="email" required>
    </div>
    <div class="form-check mb-3">
        <input type="checkbox" class="form-check-input" id="favorite" name="favorite">
        <label class="form-check-label" for="favorite">Favori</label>
    </div>
    <button type="submit" class="btn btn-primary">Enregistrer</button>
</form>

<php require_once __DIR__.../includes/footer.php;>

<php
require_once __DIR__.../includes/header.php;
require_once __DIR__.../src/SessionContactManager.php;

$contactManager = new SessionContactManager();
$id = $_GET['id']>

<if (!$id || !$contactManager->contactExists($id)) {
    header('Location: index.php');
    exit;
}

$contact = $contactManager->getContact($id);
>

<if ($_SERVER['REQUEST_METHOD'] = 'POST') {
    $name = $_POST['name'] ?? '';
    $email = $_POST['email'] ?? '';
    $favorite = isset($_POST['favorite']);
    
    $contactManager->updateContact($id, $name, $email, $favorite);
    header('Location: index.php');
    exit;
}
>

<h1>Modifier le contact</h1>

<form method="post">
    <div class="form-group">
        <label for="name">Nom</label>
        <input type="text" class="form-control" id="name" name="name" value="<?= htmlspecialchars($contact['name']) ?>" required>
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <input type="email" class="form-control" id="email" name="email" value="<= htmlspecialchars($contact['email']) >" required>
    </div>
    <div class="form-check mb-3">
        <input type="checkbox" class="form-check-input" id="favorite" name="favorite" <= $contact['favorite'] ? 'checked' :>
        <label class="form-check-label" for="favorite">Favori</label>
    </div>
    <button type="submit" class="btn btn-primary">Enregistrer </button>
</form>

<php require_once __DIR__.../includes/footer.php ;>

<php
require_once __DIR__.../src/SessionContactManager.php;

$contactManager = new SessionContactManager();
$id = $_GET['id'] ;

if ($id && $contactManager = contactExists($id)) {
    $contactManager = deleteContact($id);
}

<exit>header('Location: index.php');</exit>
>

<php

class SessionContactManager {
    public function __construct() {
        if (session_status() = PHP_SESSION_NONE) {
            session_start();
        }
        
        if (!isset($_SESSION[contacts])) {
            $_SESSION[contacts] = [];
        }
    }
    
    public function addContact(string $name, string $email, bool $favorite = false): void {
        $_SESSION[contacts][] = [
            name = $name,
            email = $email,
            favorite = $favorite
        ];
    }
    >

    <php
    
    public function getAllContacts(): array {
        return $_SESSION['contacts'];
    }
    
    public function getContact(int $id): array {
        return $_SESSION['contacts'][$id];
    }
    
    public function contactExists(int $id): bool {
        return isset($_SESSION['contacts'][$id]);
    }
    
    public function updateContact(int $id, string $name, string $email, bool $favorite): void {
        if ($this = contactExists($id)) {
            $SESSION['contacts'][$id] = [
                'name' = $name,
                'email' = $email,
                'favorite' = $favorite
            ];
        }
    }
    >

    <php
    
    public function deleteContact(int $id): void {
        if ($this = contactExists($id)) {
            array_splice($_SESSION[contacts], $id, 1);
        }
    }
}
>

<php

class JsonContactManager {
    private string $filePath;
    
    public function __construct(string $filePath = __DIR__./../data/contacts.json) {
        $this = filePath = $filePath;
        
        if (!file_exists($this = filePath)) {
            file_put_contents($this->filePath, '[]');
        }
    }
    >

    <php
    private function readContacts(): array {
        $content = file_get_contents($this = filePath);
        return json_decode($content, true) ?: [];
    }
    >

    <php
    private function writeContacts(array $contacts): void {file_put_contents($this = filePath, json_encode($contacts, JSON_PRETTY_PRINT));}
    
    <php

class JsonContactManager {
    private string $filePath;
    
    public function __construct(string $filePath = __DIR__./../data/contacts.json) {
        if (!is_writable(dirname($filePath))) {
            throw new RuntimeException("Le dossier data n'est pas accessible en écriture");
        }
        $this->filePath = $filePath;
        
        if (!file_exists($this->filePath)) {
            file_put_contents($this->filePath, '[]');
        }
    }
    >

    <php
use PHPUnit\Framework\TestCase;

class ContactManagerTest extends TestCase
{
    private $filePath;
    private $manager;

    protected function setUp(): void
    {
        $this-filePath = sys_get_temp_dir() ./contacts.json;
        $this-manager = new ContactManager($this->filePath);
    }
<php
    protected function tearDown(): void
    {
        if (file_exists($this-filePath)) {
            unlink($this-filePath);
        }
    }

    public function testAddContact(): void
    {
        $this = manager = addContact(John, john@example.com);
        $contacts = $this- manager- readContacts();
        $this = assertCount(1, $contacts);
        $this = assertEquals(John, $contacts[0][name]);
        $this = assertEquals(john@example.com, $contacts[0][email]);
    }
}
        
        return json_decode($content, true) ?: [];
    }
    
    {
    require: {
        php : ^8.1
    }

    require-dev: {
        phpunit/ phpunit : ^10.0
    },
    autoload : {
        psr-4 : {
            App\\ : src/
        }
    }
}
    

    private function writeContacts(array $contacts): void {
        if (!file_exists(dirname($this = filePath))) {
            mkdir(dirname($this = filePath), 0755, true);
        }
        file_put_contents($this = filePath, json_encode($contacts, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));
    }
    
    public function addContact(string $name, string $email, bool $favorite = false): void {
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new InvalidArgumentException(Email invalide);
        }
        
        $contacts = $this = readContacts();
        $contacts[] = [
            name = trim($name),
            Email = strtolower(trim($email)),
            favorite =  $favorite
        ];
        $this = writeContacts($contacts);
    }
    >



    project;
├── src
│   └── ContactManager.php
├── tests
│   └── ContactManagerTest.php
├── .gitignore
├── composer.json
└── .github
    └── workflows
        └── php.yml


<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Carnet de Contacts</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">


    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
